-- For Json Auto: Cláusula do SQLServer que permite que uma projeção seja transformada em JSON, sendo aplicada da seguinte forma:
------------------------------------------------------
-- Consulta
------------------------------------------------------
use WideWorldImporters;
Select Top 2 CustomerName, PrimaryContact, AlternateContact, PhoneNumber
From Website.Customers
For Json Auto;
------------------------------------------------------
-- Json Gerado
-- Site para idendar e visualizar json: https://jsonformatter.curiousconcept.com
------------------------------------------------------
/*
[
   {
      "CustomerName":"Tailspin Toys (Head Office)",
      "PrimaryContact":"Waldemar Fisar",
      "AlternateContact":"Laimonis Berzins",
      "PhoneNumber":"(308) 555-0100"
   },
   {
      "CustomerName":"Tailspin Toys (Sylvanite, MT)",
      "PrimaryContact":"Lorena Cindric",
      "AlternateContact":"Hung Van Groesen",
      "PhoneNumber":"(406) 555-0100"
   }
]
*/
------------------------------------------------------

Ps: O MSSQL Manager Studio, irá informar uma opção para exibir viar editor XML, porém na verdade estamos lidando com um arquivo json. 
Cada elemento do array, equivale a uma linha da tabela. Sendo o nome da coluna no atributo do objeto e o valor da tupla o valor setado no mesmo. 

-----------------------------------------------------
-- Atenção: Não necessariamente toda consulta será convertida em JSON da maneira informada anteriormente, isso depende de como a consulta é realizada. 
-- Segue o exemplo de uma consulta realizada verificando metadados do SQLServer:
-----------------------------------------------------
-- Consulta exemplo 2
-----------------------------------------------------
Select db_name() as [Database],
sys.schemas.name, 
sys.objects.name, 
sys.columns.name From sys.objects
Join sys.schemas On sys.objects.schema_id = sys.schemas.schema_id
Join sys.columns On sys.columns.object_id = sys.objects.object_id 
Join 
(
  Select Top 1 o.object_id, count(c.name) name from sys.columns c
  Join sys.objects o On c.object_id = o.object_id Where type = 'u' 
  Group By o.object_id Having Count(c.name) < 6
) countCol On countCol.object_id = sys.objects.object_id
Where type = 'u'
For Json Auto
-----------------------------------------------------
-- Json Gerado
-----------------------------------------------------
/*
[
   {
      "Database":"WideWorldImporters",
      "name":"Purchasing",
      "sys.objects":[
         {
            "name":"SupplierCategories",
            "sys.columns":[
               {
                  "name":"SupplierCategoryID"
               },
               {
                  "name":"SupplierCategoryName"
               },
               {
                  "name":"LastEditedBy"
               },
               {
                  "name":"ValidFrom"
               },
               {
                  "name":"ValidTo"
               }
            ]
         }
      ]
   }
]
*/
-----------------------------------------------------

Se tratando de uma consulta mais complexa, o SQLServer a forma de gerar o Json conforme os joins são projetados, no exemplo acima temos o retorno onde o únicos valores que não se repetem são os nomes das colunas, nesse caso foi gerado um sys.columns, conforme selecionado e o atributo name setado na forma de um array de objetos. 

-----------------------------------------------------
-- ** Verificar: Foi reconhecido de acordo com o join que os valores dos outros atributos seriam sempre os mesmos?
-- R: De acordo com teste realizado, foi constatado que para cada mudança de valor na tupla, um novo objeto é gerado e adicionado no array de objetos JSON, exemplo:
-----------------------------------------------------
-- Consulta de teste com valores diferentes
-----------------------------------------------------
Select db_name() as [Database],
sys.schemas.name, 
sys.objects.name, 
sys.columns.name 
From sys.objects
Join sys.schemas On sys.objects.schema_id = sys.schemas.schema_id
Join sys.columns On sys.columns.object_id = sys.objects.object_id 
where sys.schemas.name in ('Warehouse', 'Sales')

-----------------------------------------------------
-- Resumo do json gerado 
-----------------------------------------------------
/*
[
    {
        "Database": "WideWorldImporters",
        "name": "Sales",
        "sys.objects": [
            {
                "name": "BuyingGroups",
                "sys.columns": [
                    {
                        "name": "BuyingGroupID"
                    },
                    {
                        "name": "BuyingGroupName"
                    },
                    {
                        "name": "LastEditedBy"
                    },
                    {
                        "name": "ValidFrom"
                    },
                    {
                        "name": "ValidTo"
                    }
                ]
            },
            {
                "name": "BuyingGroups_Archive",
                "sys.columns": [
                    {
                        "name": "BuyingGroupID"
                    },
                    {
                        "name": "BuyingGroupName"
                    },
                    {
                        "name": "LastEditedBy"
                    },
                    {
                        "name": "ValidFrom"
                    },
                    {
                        "name": "ValidTo"
                    }
                ]
            }
        ]
    },
    {
        "Database": "WideWorldImporters",
        "name": "Warehouse",
        "sys.objects": [
            {
                "name": "ColdRoomTemperatures",
                "sys.columns": [
                    {
                        "name": "ColdRoomSensorNumber"
                    },
                    {
                        "name": "ColdRoomTemperatureID"
                    },
                    {
                        "name": "RecordedWhen"
                    },
                    {
                        "name": "Temperature"
                    },
                    {
                        "name": "ValidFrom"
                    },
                    {
                        "name": "ValidTo"
                    }
                ]
            },
            {
                "name": "ColdRoomTemperatures_Archive",
                "sys.columns": [
                    {
                        "name": "ColdRoomSensorNumber"
                    },
                    {
                        "name": "ColdRoomTemperatureID"
                    },
                    {
                        "name": "RecordedWhen"
                    },
                    {
                        "name": "Temperature"
                    },
                    {
                        "name": "ValidFrom"
                    },
                    {
                        "name": "ValidTo"
                    }
                ]
            }
        ]
    }
]
*/
-----------------------------------------------------

-----------------------------------------------------
-- Consulta de Exemplo 
-----------------------------------------------------
SELECT 
	Y.REGIAO, 
	Y.ESTADO, 
	X.CIDADE 
FROM 
(
	SELECT 'RIO DE JANEIRO' AS CIDADE, 'RJ' AS ESTADO
	UNION
	SELECT 'SÃO PAULO' AS CIDADE, 'SP' AS ESTADO
	UNION
	SELECT 'NITERÓI' AS CIDADE, 'RJ' AS ESTADO
	UNION
	SELECT 'SANTOS' AS CIDADE, 'SP' AS ESTADO
) X INNER JOIN 
(
	SELECT 'SP' AS ESTADO, 'SUDESTE' AS REGIAO
	UNION
	SELECT 'RJ' AS ESTADO, 'SUDESTE' AS REGIAO
) Y ON X.ESTADO = Y.ESTADO
For Json Auto
-----------------------------------------------------
-- Json Retornado
-----------------------------------------------------
/*
[
   {
      "REGIAO":"SUDESTE",
      "ESTADO":"RJ",
      "X":[
         {
            "CIDADE":"NITERÓI"
         },
         {
            "CIDADE":"RIO DE JANEIRO"
         }
      ]
   },
   {
      "REGIAO":"SUDESTE",
      "ESTADO":"SP",
      "X":[
         {
            "CIDADE":"SANTOS"
         },
         {
            "CIDADE":"SÃO PAULO"
         }
      ]
   }
]
*/
-----------------------------------------------------
* Com este exemplo, fica mais claro que o json é gerado respeitando a hierarquea dos joins


